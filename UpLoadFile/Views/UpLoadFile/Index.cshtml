@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css"
          integrity="sha512-YWzhKL2whUzgiheMoBFwW8CKV4qpHQAEuvilg9FAn5VJUDwKZZxkJNuGM4XkWuk94WCrrwslk8yWNGmY1EduTA=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer" />
    
    <title>Document</title>
    <style>
        :root {
          --pink-color: #e26e70;
        }

        * {
          padding: 0;
          margin: 0;
          font-family: sans-serif;
          box-sizing: border-box;
        }

        body {
          background-image: linear-gradient(
            45deg,
            rgb(65, 88, 208) 0%,
            rgb(200, 80, 192) 50%,
            rgb(255, 204, 112) 100%
          );
          height: 100vh;
          overflow: hidden;
        }

        .open-modal-btn {
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          outline: none;
          border: none;
          padding: 20px 40px;
          border-radius: 6px;
          font-size: 20px;
          cursor: pointer;
          box-shadow: 0 0 5px #aba4a4;
          background-color: #fff;
          transition: 0.25s;
        }

        .open-modal-btn:hover {
          background-color: rgba(255, 255, 255, 0.8);
        }

        .modal {
          position: absolute;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          background-color: rgba(0, 0, 0, 0.6);
        }

        .hide {
          display: none;
        }

        .modal__inner {
          width: 450px;
          background-color: #fff;
          border-radius: 5px;
          overflow: hidden;
          animation: showModal linear 0.2s;
          position: relative;
          margin: 200px auto;
        }
        input[type ="file"] {
          outline: none;
          border: none;
          overflow:hidden;
          border-radius: 6px;
          font-size: 20px;
          cursor: pointer;
          box-shadow: 0 0 5px #aba4a4;
          background-color: #fff;
        }
        @@keyframes showModal {
          from {
            top: -200px;
            opacity: 0;
          }
          to {
            top: 0;
            opacity: 1;
          }
        }

        .modal__header {
          background-color: var(--pink-color);
          color: white;
          display: flex;
          align-items: center;
          justify-content: space-between;
          padding: 15px;
          font-size: 17px;
        }

        .modal__body {
          padding: 15px;
        }

        .modal__body h2 {
          color: var(--pink-color);
          margin-bottom: 10px;
        }

        .modal__footer {
          padding: 15px;
          text-align: right;
        }

        .modal__footer button {
          outline: none;
          border: none;
          padding: 10px 20px;
          background-color: var(--pink-color);
          color: white;
          border-radius: 6px;
          cursor: pointer;
        }

        i {
          cursor: pointer;
          font-size: 18px;
        }

        .range {
           
            width: 400px;
            height: 20px;
            background-color: white;
            border: 1px solid #aaa;
            border-radius: 100px;
            position: relative;
            overflow: hidden;
            cursor: e-resize;
        }

        .range-bar {
            background-image: linear-gradient(to right, #bb69cc, #246bac);
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .range-bar i {
            
        }
    </style>
</head>
<body>
    <button class="open-modal-btn">Open UpLoad File Modal</button>
    <div class="modal hide">
        <div class="modal__inner">
            <div class="modal__header">
                <h2>File Upload Progress </h2>
                <i class="fas fa-times"></i>
            </div>
            <div class="modal__body">
                <form id="upload_form" enctype="multipart/form-data" method="post">

                    <input type="file" name="file1" id="file1" onchange="uploadFile()">
                    <div class="range">
                        <div class="range-bar">
                            <span></span>
                            <i class="fa-solid fa-file"></i>
                        </div>
                        
                    </div>
                    @*<progress id="progressBar" value="0" max="100" style="width:400px;"></progress>*@
                    <h3 id="status"></h3>
                    <p id="loaded_n_total"></p>
                </form>
            </div>
            <div class="modal__footer">
                <button>Close</button>
            </div>
        </div>
    </div>
    

    <script>

        const modal = document.querySelector(".modal");
        const openModalBtn = document.querySelector(".open-modal-btn");
        const iconCloseModal = document.querySelector(".modal__header i");
        const buttonCloseModal = document.querySelector(".modal__footer button");
        const range = document.querySelector(".range");
        const rangeBar = document.querySelector(".range-bar");

        function toggleModal() {
            modal.classList.toggle("hide");
        }

        function setRangeBar(percent) {
            rangeBar.style.width = `${percent}%`;
            rangeBar.querySelector("span").innerText = `${percent}%`;
            //rangeBar.querySelector("i").style.width = `${percent}%`;

        }


        openModalBtn.addEventListener("click", toggleModal);
        iconCloseModal.addEventListener("click", toggleModal);
        buttonCloseModal.addEventListener("click", toggleModal);

        modal.addEventListener("click", (e) => {
            if (e.target == e.currentTarget) toggleModal();
        });


        function _(el) {
            return document.getElementById(el);
        }

        function uploadFile() {
            var file = _("file1").files[0];
            // alert(file.name+" | "+file.size+" | "+file.type);
            var formdata = new FormData();
            formdata.append("file1", file);
            var ajax = new XMLHttpRequest();
            ajax.upload.addEventListener("progress", progressHandler);
            ajax.addEventListener("load", completeHandler);
            ajax.addEventListener("error", errorHandler);
            //ajax.addEventListener("abort", abortHandler);
            ajax.open("POST", "uploadfile/upload");
            ajax.send(formdata);
        }

        function progressHandler(event) {
            _("loaded_n_total").innerHTML = "Uploaded " + event.loaded + " bytes of " + event.total;
            var percent = (event.loaded / event.total) * 100;
            //_("progressBar").value = Math.round(percent);
            setRangeBar(Math.round(percent));
            _("status").innerHTML = Math.round(percent) + "% uploaded... please wait";
        }

        function completeHandler(event) {
            _("status").innerHTML = event.target.responseText;
            _("progressBar").value = 0; 
        }

        function errorHandler(event) {
            _("status").innerHTML = "Upload Failed";
        }

    </script>
</body>
</html>
